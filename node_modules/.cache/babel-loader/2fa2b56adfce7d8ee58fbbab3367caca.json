{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML\\\\43-react-star-wars\\\\src\\\\components\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../css_modules/contact.module.css\";\nimport { base_url, defaultHero, friends, periodMonth } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = props => {\n  _s();\n\n  const [planets, setPlanets] = useState(['wait...']);\n  let {\n    heroId\n  } = useParams();\n\n  if (!friends.includes(heroId)) {\n    heroId = defaultHero;\n  }\n\n  const fillPlanets = async url => {\n    const response = await fetch(url);\n    const json = await response.json();\n    const planets = json.map(item => item.name);\n    setPlanets(planets);\n    const info = {\n      payLoad: planets,\n      time: Date.now()\n    };\n    localStorage.setItem('planets', JSON.stringify(info));\n  };\n\n  useEffect(() => {\n    const planets = JSON.parse(localStorage.getItem('planets'));\n\n    if (!planets || Date.now() - planets.time > periodMonth) {\n      fillPlanets(`${base_url}/v1/planets`);\n    } else {\n      setPlanets(planets.payLoad);\n    }\n\n    return () => console.log('Component Contact unmounted');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          placeholder: \"Your name..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Planet\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"planet\",\n          children: planets.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"subject\",\n          placeholder: \"Write something..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"NoZn+n7AB/uWpPmfYd6sw60Jp3A=\", true);\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useEffect","useState","base_url","defaultHero","friends","periodMonth","Contact","props","planets","setPlanets","heroId","useParams","includes","fillPlanets","url","response","fetch","json","map","item","name","info","payLoad","time","Date","now","localStorage","setItem","JSON","stringify","parse","getItem","console","log","e","preventDefault","index"],"sources":["D:/HTML/43-react-star-wars/src/components/Contact.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"../css_modules/contact.module.css\";\nimport { base_url, defaultHero, friends, periodMonth } from \"../utils/constants\";\n\nconst Contact = props => {\n  const [planets, setPlanets] = useState(['wait...']);\n  let { heroId } = useParams();\n  if (!friends.includes(heroId)) {\n    heroId = defaultHero;\n  }\n\n  const fillPlanets = async (url) => {\n    const response = await fetch(url);\n    const json = await response.json();\n    const planets = json.map(item => item.name);\n    setPlanets(planets);\n    const info = {\n      payLoad: planets,\n      time: Date.now()\n    };\n    localStorage.setItem('planets', JSON.stringify(info));\n\n  }\n\n  useEffect(() => {\n    const planets = JSON.parse(localStorage.getItem('planets'));\n    if (!planets || (Date.now() - planets.time) > periodMonth) {\n      fillPlanets(`${base_url}/v1/planets`);\n    } else {\n      setPlanets(planets.payLoad);\n    }\n    return () => console.log('Component Contact unmounted');\n  }, [])\n\n  return (\n    <div>\n      <form onSubmit={(e) => {\n        e.preventDefault();\n      }}>\n        <label>First Name\n          <input type=\"text\" name=\"firstname\" placeholder=\"Your name..\" />\n        </label>\n        <label>Planet\n          <select name=\"planet\">{\n            planets.map((item, index) => <option value={item} key={index}>{item}</option>)\n          }\n          </select>\n        </label>\n        <label>Subject\n          <textarea name=\"subject\" placeholder=\"Write something..\" />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  )\n\n}\n\nexport default Contact;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,mCAAP;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,EAAyCC,WAAzC,QAA4D,oBAA5D;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;EAAA;;EACvB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAtC;EACA,IAAI;IAAES;EAAF,IAAaC,SAAS,EAA1B;;EACA,IAAI,CAACP,OAAO,CAACQ,QAAR,CAAiBF,MAAjB,CAAL,EAA+B;IAC7BA,MAAM,GAAGP,WAAT;EACD;;EAED,MAAMU,WAAW,GAAG,MAAOC,GAAP,IAAe;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;IACA,MAAMT,OAAO,GAAGS,IAAI,CAACC,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACC,IAAtB,CAAhB;IACAX,UAAU,CAACD,OAAD,CAAV;IACA,MAAMa,IAAI,GAAG;MACXC,OAAO,EAAEd,OADE;MAEXe,IAAI,EAAEC,IAAI,CAACC,GAAL;IAFK,CAAb;IAIAC,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAhC;EAED,CAXD;;EAaArB,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAGoB,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,SAArB,CAAX,CAAhB;;IACA,IAAI,CAACvB,OAAD,IAAagB,IAAI,CAACC,GAAL,KAAajB,OAAO,CAACe,IAAtB,GAA8BlB,WAA9C,EAA2D;MACzDQ,WAAW,CAAE,GAAEX,QAAS,aAAb,CAAX;IACD,CAFD,MAEO;MACLO,UAAU,CAACD,OAAO,CAACc,OAAT,CAAV;IACD;;IACD,OAAO,MAAMU,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAAb;EACD,CARQ,EAQN,EARM,CAAT;EAUA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAGC,CAAD,IAAO;QACrBA,CAAC,CAACC,cAAF;MACD,CAFD;MAAA,wBAGE;QAAA,sCACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,WAAxB;UAAoC,WAAW,EAAC;QAAhD;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAME;QAAA,kCACE;UAAQ,IAAI,EAAC,QAAb;UAAA,UACE3B,OAAO,CAACU,GAAR,CAAY,CAACC,IAAD,EAAOiB,KAAP,kBAAiB;YAAQ,KAAK,EAAEjB,IAAf;YAAA,UAAkCA;UAAlC,GAA0BiB,KAA1B;YAAA;YAAA;YAAA;UAAA,QAA7B;QADF;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAYE;QAAA,mCACE;UAAU,IAAI,EAAC,SAAf;UAAyB,WAAW,EAAC;QAArC;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF,eAeE;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CApDD;;GAAM9B,O;;KAAAA,O;AAsDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}